# ----------------------------------------------------------------------
# AIRFLOW STACK  --  single-host CeleryExecutor setup
# ----------------------------------------------------------------------

x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.8.1}
  environment:
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
    AIRFLOW__LOGGING__REMOTE_LOGGING: "False"
    AIRFLOW__WEBSERVER__BASE_URL: http://airflow-api:8080
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - ${AIRFLOW_PROJ_DIR}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR}/config:/opt/airflow/config
  user: "${AIRFLOW_UID:-1000}:0"
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
  networks:
    - data_eng_net

services:
  # ────────────────────────────────────────────────────────────────────
  # metadata database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data          # ← named volume (portable)
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    networks:
      - data_eng_net

  # ────────────────────────────────────────────────────────────────────
  # message broker
  redis:
    image: redis:7.2-bookworm
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
    networks:
      - data_eng_net

  # ────────────────────────────────────────────────────────────────────
  # airflow core services (inherit common block via YAML anchor)
  airflow-api:
    <<: *airflow-common
    command: webserver
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${AIRFLOW_PROJ_DIR}/dags:/opt/airflow/dags
    ports:
      - "8080:8080"

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${AIRFLOW_PROJ_DIR}/dags:/opt/airflow/dags
    ports:
      - "8793:8793"

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # one-shot DB init + admin user
  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username airflow --password airflow --firstname Almog --lastname Kapach --role Admin --email admin@example.com
      "
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock



networks:
  data_eng_net:
    external: true

volumes:
  pgdata:
