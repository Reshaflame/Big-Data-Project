version: "3.9"

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DOMAIN: minio
    volumes:
      - ${DATA_ROOT}/processing/minio-data:/data
    ports: ["9000:9000", "9001:9001"]
    networks:
      - data_eng_net

  rest:
    image: tabulario/iceberg-rest:latest        # lighter than *_fixture*
    container_name: iceberg-rest
    depends_on: [ minio ]
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_REGION: us-east-1
      CATALOG_WAREHOUSE: s3a://warehouse/
      CATALOG_IO_IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
    ports: ["8181:8181"]
    networks:
      - data_eng_net

  spark:
    image: tabulario/spark-iceberg:latest
    container_name: spark-iceberg
    depends_on: [ rest, minio ]
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_REGION: us-east-1
    volumes:
      - ${DATA_ROOT}/processing/warehouse:/home/iceberg/warehouse
      - ${DATA_ROOT}/processing/notebooks:/home/iceberg/notebooks
    ports: ["8888:8888","4040:4040"]
    networks:
      - data_eng_net

  mc:
    image: minio/mc:latest
    depends_on: [ minio ]
    entrypoint: >
      /bin/sh -c "
      until mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; do sleep 1; done;
      mc mb -p minio/warehouse || true;
      mc policy set public minio/warehouse;
      tail -f /dev/null"
    networks:
      - data_eng_net

networks:
  data_eng_net:
    external: true
